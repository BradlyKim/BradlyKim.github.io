{"version":3,"sources":["components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","InputWrapper","Input","input","BtnAdd","button","TodoList","TodoContent","span","TodoItem","li","isDone","css","BtnDelete","TodoComponent","nextId","useRef","useState","text","setText","id","todoList","setTodoList","value","placeholder","onChange","e","target","onClick","newArray","current","idDone","map","type","checked","todo","console","log","handleToggle","filter","handleDelete","App","Todo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAiEMA,EAAYC,IAAOC,IAAV,yFAMTC,EAAQF,IAAOC,IAAV,qMAWLE,EAAeH,IAAOC,IAAV,sFAMZG,EAAQJ,IAAOK,MAAV,8JAWLC,EAASN,IAAOO,OAAV,0BAENC,EAAWR,IAAOC,IAAV,iGAMRQ,EAAcT,IAAOU,KAAV,0BACXC,EAAWX,IAAOY,GAAV,sPAcV,qBAAGC,QAEHC,YADM,uJAIFL,MAKFM,EAAYf,IAAOO,OAAV,0BAEAS,EAnIO,WACpB,IAAMC,EAASC,iBAAO,GACtB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,CACvC,CACEG,GAAI,EACJF,KAAM,eACNP,QAAQ,KAJZ,mBAAOU,EAAP,KAAiBC,EAAjB,KAkCA,OACE,eAACzB,EAAD,WACE,cAACG,EAAD,wCACA,eAACC,EAAD,WACE,cAACC,EAAD,CACEqB,MAAOL,EACPM,YAAY,qDACZC,SAjCa,SAACC,GACpBP,EAAQO,EAAEC,OAAOJ,UAkCb,cAACnB,EAAD,CAAQwB,QA/BI,WAChB,IAAMC,EAAQ,sBAAOR,GAAP,CAAiB,CAAED,GAAIL,EAAOe,QAASZ,OAAMa,QAAQ,KACnEhB,EAAOe,QAAUf,EAAOe,QAAU,EAClCR,EAAYO,GACZV,EAAQ,KA2BJ,6BAEF,cAACb,EAAD,UACGe,EAASW,KAAI,gBAAGZ,EAAH,EAAGA,GAAIF,EAAP,EAAOA,KAAMP,EAAb,EAAaA,OAAb,OACZ,eAACF,EAAD,CAAmBE,OAAQA,EAA3B,UACE,kCACE,uBAAOsB,KAAK,WAAWR,SAAU,SAACC,GAAD,OAxBxB,SAACA,EAAGN,GACvB,IAAMT,EAASe,EAAEC,OAAOO,QAClBL,EAAWR,EAASW,KAAI,SAACG,GAAD,OAC5BA,EAAKf,KAAOA,EAAZ,2BAAsBe,GAAtB,IAA4BxB,WAAWwB,KAEzCC,QAAQC,IAAIR,GACZP,EAAYO,GAkBsCS,CAAaZ,EAAGN,MACxD,cAACb,EAAD,CAAaI,OAAQA,EAArB,SAA8BO,OAEhC,cAACL,EAAD,CAAWe,QAAS,kBAjCT,SAACR,GACpB,IAAMS,EAAWR,EAASkB,QAAO,SAACJ,GAAD,OAAUA,EAAKf,KAAOA,KACvDgB,QAAQC,IAAIR,GACZP,EAAYO,GA8BsBW,CAAapB,IAAvC,4BALaA,YC3CVqB,MARf,WACE,OACE,mCACE,cAACC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dae21c4f.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst TodoComponent = () => {\r\n  const nextId = useRef(2);\r\n  const [text, setText] = useState(\"\");\r\n  const [todoList, setTodoList] = useState([\r\n    {\r\n      id: 1,\r\n      text: \"할일\",\r\n      isDone: false,\r\n    },\r\n  ]);\r\n\r\n  const handleChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const newArray = [...todoList, { id: nextId.current, text, idDone: false }];\r\n    nextId.current = nextId.current + 1;\r\n    setTodoList(newArray);\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const newArray = todoList.filter((todo) => todo.id !== id);\r\n    console.log(newArray);\r\n    setTodoList(newArray);\r\n  };\r\n\r\n  const handleToggle = (e, id) => {\r\n    const isDone = e.target.checked;\r\n    const newArray = todoList.map((todo) =>\r\n      todo.id === id ? { ...todo, isDone } : todo\r\n    );\r\n    console.log(newArray);\r\n    setTodoList(newArray);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>일정 관리</Title>\r\n      <InputWrapper>\r\n        <Input\r\n          value={text}\r\n          placeholder=\"할 일을 입력하세요\"\r\n          onChange={handleChange}\r\n        />\r\n        <BtnAdd onClick={handleAdd}>등록</BtnAdd>\r\n      </InputWrapper>\r\n      <TodoList>\r\n        {todoList.map(({ id, text, isDone }) => (\r\n          <TodoItem key={id} isDone={isDone}>\r\n            <label>\r\n              <input type=\"checkbox\" onChange={(e) => handleToggle(e, id)} />\r\n              <TodoContent isDone={isDone}>{text}</TodoContent>\r\n            </label>\r\n            <BtnDelete onClick={() => handleDelete(id)}>삭제</BtnDelete>\r\n          </TodoItem>\r\n        ))}\r\n      </TodoList>\r\n    </Container>\r\n  );\r\n};\r\nconst Container = styled.div`\r\n  width: 600px;\r\n  margin: 20px auto;\r\n  border: 1px solid;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  background: #06857e;\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  background: black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  background: none;\r\n  border: none;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst BtnAdd = styled.button``;\r\n\r\nconst TodoList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TodoContent = styled.span``;\r\nconst TodoItem = styled.li`\r\n  display: flex;\r\n  width: 580px;\r\n  padding: 10px;\r\n  justify-content: space-between;\r\n  & + & {\r\n    border-top: 1px solid #ddd;\r\n  }\r\n\r\n  &:nth-child(even) {\r\n    background: gray;\r\n    color: white;\r\n  }\r\n\r\n  ${({ isDone }) =>\r\n    isDone &&\r\n    css`\r\n      /* background: black; */\r\n      /* color: #fff; */\r\n      ${TodoContent} {\r\n        text-decoration: line-through;\r\n      }\r\n    `}\r\n`;\r\nconst BtnDelete = styled.button``;\r\n\r\nexport default TodoComponent;\r\n","import TodoComponent from \"./components/Todo\";\n\nfunction App() {\n  return (\n    <>\n      <TodoComponent />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}